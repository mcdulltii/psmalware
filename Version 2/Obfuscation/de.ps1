function de(){Param([Parameter(Mandatory=$true)][byte[]]$bDe,[Parameter(Mandatory=$true)][byte[]]$ps,[Parameter(Mandatory=$true)][ref]$deB,[Parameter(Mandatory=$false)][byte[]]$cSalt);[byte[]]$decB = @();[byte[]]$aSaltBytes = @(4,7,12,254,123,98,34,12,67,12,122,111);if($cSalt.Count -ge 1){$aSaltBytes=$cSalt;};[System.IO.MemoryStream] $oMemoryStream = new-object System.IO.MemoryStream;[System.Security.Cryptography.RijndaelManaged] $oAES = new-object System.Security.Cryptography.RijndaelManaged;$oAES.KeySize = 256;$oAES.BlockSize = 128;[System.Security.Cryptography.Rfc2898DeriveBytes] $oKey = new-object System.Security.Cryptography.Rfc2898DeriveBytes($ps, $aSaltBytes, 1000);$oAES.Key = $oKey.GetBytes($oAES.KeySize / 8);$oAES.IV = $oKey.GetBytes($oAES.BlockSize / 8);$oAES.Mode = [System.Security.Cryptography.CipherMode]::CBC;$oCryptoStream = new-object System.Security.Cryptography.CryptoStream($oMemoryStream, $oAES.CreateDecryptor(), [System.Security.Cryptography.CryptoStreamMode]::Write);try{$oCryptoStream.Write($bDe, 0, $bDe.Length);$oCryptoStream.Close();}catch [Exception]{$deB.Value=[system.text.encoding]::ASCII.GetBytes("Error occured while decoding string. Salt or Password incorrect?");return $false;};$decB = $oMemoryStream.ToArray();$deB.Value=$decB;};